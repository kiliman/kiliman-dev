name: 🚀 Deploy

on:
  push:
    branches:
      - main

jobs:
  changes:
    name: 🔎 Determine deployable changes
    runs-on: ubuntu-latest
    outputs:
      DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: 🔎 Determine deployable changes
        id: changes
        run: >-
          echo ::set-output name=DEPLOYABLE::$(node ./scripts/is-deployable.js ${{
          github.sha }})

      - name: ❓ Deployable
        run: >-
          echo "DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}"

  deploy:
    name: Deploy
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 🥶 Cache dependencies
        if: $${{ !env.ACT }}
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
            ${{ runner.OS }}-

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 📦 Install npm packages
        run: npm install && npm run postinstall

      - name: 🛠 Build Remix app
        run: npm run build
        env:
          COMMIT_SHA: ${{ github.sha }}

      - name: 🎉 Publish
        uses: cloudflare/wrangler-action@1.3.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
