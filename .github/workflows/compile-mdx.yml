name: 🥬 Compile MDX
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  changes:
    name: 🔎 Determine content changes
    runs-on: ubuntu-latest
    outputs:
      CONTENT: ${{steps.changes.outputs.CONTENT}}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: 🔎 Determine content changes
        id: changes
        run: >-
          echo ::set-output name=CONTENT::$(node ./scripts/get-changed-content.js ${{
          github.sha }})

      - name: ❓ Content
        run: >-
          echo "CONTENT: ${{steps.changes.outputs.CONTENT}}"

  compile:
    name: 🛠 Compile MDX
    if: needs.changes.outputs.CONTENT != ''
    needs: [changes]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: 🥶 Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-
            ${{ runner.OS }}-

      - name: 📦 Install npm packages
        run: cd ./scripts/mdx && npm install

      - name: 🚀 Compile and post MDX
        run: cd ./scripts/mdx && npx esbuild ./compile-mdx.ts --platform=node --target=node16 --outfile=dist/compile-mdx.js && node ./dist/compile-mdx.js ../../ ${{steps.changes.outputs.CONTENT}}
        env:
          POST_API_URL: ${{ secrets.POST_API_URL }}
          POST_API_KEY: ${{ secrets.POST_API_KEY }}
